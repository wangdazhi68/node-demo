<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AICG认证|AIGC溯源|AIGC存证-AIGC-PAS平台</title>
    <meta name="keywords" content="AIGC认证,AIGC溯源,AIGG存证,AIGC-PAS平台"/>
    <meta name="description" content="联合信任推出人工智能生成内容（AIGC）的溯源与认证平台，平台采用密码学、时间戳、哈希值校验、电子签名、数字指纹等多种技术手段，对AIGC生成过程进行全程存证，并颁发唯一且不可篡改的身份标识和来源证明（tsa token），为解决AIGC发展过程中面临的深度伪造、版权纠纷、信任危机以及平台合规等提供证据。"/>
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <link rel='stylesheet' href='/stylesheets/aigc/baseCss.css'/>
    <link rel='stylesheet' href='/stylesheets/aigc/resetCss.css'/>
    <link rel='stylesheet' href='/stylesheets/aigc/aigc.css'/>
    <link rel='stylesheet' href='/stylesheets/aigc/header.css'/>
    <link rel='stylesheet' href='/stylesheets/aigc/footer.css'/>
    <link rel='stylesheet' href='/stylesheets/aigc/docking.css'/>
</head>

<body>
    <div id="wrap">
        <div class="aigcCon">
            <%- include('./components/header'); %>
            <div class="banner bgCommon" :style="{ backgroundImage: 'url(' + bannerImg + ')' }">
                <div class="bannerMain">
                    <div class="bannerBtn  btn" @click="dockModal=true">申请接入</div>
                </div>
            </div>
            <div class="address">
                <div class="addressMain">
                    <el-row type="flex" justify="space-between" class="">
                        <% addressInfo.forEach((item,index)=> { %>
                            <el-col :span=" <%= index %> === 0 ? 7 : <%= index %> === 1 ? 9 : <%= index %> === 2 ? 6 : ''"
                                @click.native="addressClick(<%= index %>)" class="addCol">
                                <div class="left bgCommon" :style="{backgroundImage:'url(<%= item.img %>)'}"></div>
                                <div class="addressTitle"> <%- item.title %> </div>
                                <div class="addressText">
                                    <p v-if="<%= index %>!==0"> <%- item.info %> </p>
                                    <p v-else>使用可信时间戳证据的裁判文书{{ accountNum.precedentTotal }}件</p>
                                </div>
                                <div class="addressBot" v-if="<%= index %> === 0">
                                    (数据来源：中国裁判文书网)
                                </div>
                            </el-col>
                        <% }); %>
                    </el-row>
                </div>
            </div>
            <div class="earth">
                <div class="earthMain bgCommon" :style="{ backgroundImage: 'url(' + earthPng + ')' }">
                    <div class="earthTxt earthTxt1">
                        2023年1月10日国家互联网信息办公室、中华人民共和国工业和信息化部、中华人民共和国公安部制定并施行《互联网信息服务深度合成管理规定》，明确规定“深度合成服务提供者对使用服务生成或者编辑的信息内容，应当采取技术措施添加不影响用户使用的标识，并依照法律、行政法规和国家有关规定保存日志信息。
                    </div>
                    <div class="earthTxt earthTxt2">
                        2023年4月11日国家互联网信息办公室公布《生成式人工智能服务管理办法（征求意见稿）》，公开征求意见中要求AIGC平台承担内容生产者的责任，保证数据的真实性、准确性、客观性、多样性，对生成的图片、视频等内容进行标识。
                    </div>
                </div>
            </div>
            <div class="introduce">
                <div class="introduceMain">
                    <div class="title">AIGC PAS 平台介绍</div>
                    <div class="text">
                        <div class=" introduceText1">
                            AIGC PAS（AIGC Provenance and Authentication Service）
                        </div>
                        <div class=" introduceText2">
                            平台是联合信任推出的人工智能生成内容（AIGC）的溯源与认证平台。平台采用密码学、时间戳、哈希值校验、电子签名、数字指纹等多种技术手段，对AIGC生成过程进行全程存证，并颁发唯一且不可篡改的身份标识和来源证明（tsa token），为解决AIGC发展过程中面临的深度伪造、版权纠纷、信任危机以及平台合规等提供证据。
                        </div>
                    </div>
                    <div class="introLogo bgCommon" :style="{ backgroundImage: 'url(' + introduceInfo.img + ')' }" ></div>
                </div>
            </div>
            <div class="precedent">
                <div class="title">
                    典型案例
                </div>
                <div class="preceMain">
                    <div class="preceLogo bgCommon" :style="{ backgroundImage: 'url(' + precedentInfo.img + ')' }"></div>
                    <div class="preceText">
                        <div class="text">
                            <p class="P1 bgCommon"
                                :style="{ backgroundImage: 'url(' + precedentInfo.textPng1 + ')' }">
                            </p>
                            <span>视觉中国是国内领先的视觉内容服务提供商，拥有超过2亿张高质量的图片、视频和音乐素材。视觉中国在其平台上推出了AI图片功能，即使用人工智能技术为用户提供定制化的图片生成服务。</span>
                        </div>
                        <div class="text">
                            <span>联合信任为视觉中国AI图片提供了AIGC PAS服务，为每一张AI图片生成了一个唯一的身份标识（tsa token），用户可以通过视觉中国AI平台或访问可信时间戳验证平台查看AI图片的溯源和认证信息，从而区分AI图片和真实图片，保护原创作者和使用者的权益。联合信任开放AIGC PAS系统，为更多的AIGC平台提供服务。</span>
                            <p class="P2 bgCommon" :style="{ backgroundImage: 'url(' + precedentInfo.textPng2 + ')' }"></p>
                        </div>
                        <div class="btn" @click="dockModal=true">申请接入</div>
                    </div>
                </div>
            </div>
        </div>
        <!--news qa-->
        <div class="preCon">
            <el-row type="flex" class="pre-bg" justify="space-between">
                <el-col :span="15" class="preLeftCol">
                    <div class="pre-left">
                        <h3 class="title">
                            AIGC新闻资讯</h3>
                        <div class="tab-cnt">
                            <ul>
                                <% newList.forEach((item)=> { %>
                                    <li>
                                        <div class="introduceImg bgCommon" :style="{backgroundImage:'url(<%= item.filePath %>)'}"></div>
                                        <div class="introText" @click="goDetail(`news/detail/<%= item.id %>`)">
                                            <div>
                                                <p class="introduce"><%- item.title %></p>
                                                <p class="caseNo textOverFlow"><%= item.description %></p>
                                            </div>
                                            <p class="caseTime"><%= myDateFormat(item.publishedAt)%></p>
                                        </div>
                                    </li>
                                <% }); %>
                            </ul>
                            <div class="more">
                                <span>
                                    <a href="<%= process.env.VUE_APP_TSA%>/news" @click.prevent="botClck(1)">
                                        查看更多 <i class="el-icon-right"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                </el-col>
                <el-col :span="8" class="preRightCol">
                    <div class="pre-right">
                        <h3 class="title">常见问题</h3>
                        <div class="qusion">
                            <div class="ipt-wrap">
                                <el-input type="text" placeholder="请输入您想要了解的问题或关键字" v-model="newKeywords" class="ipt">
                                    <i class="el-icon-search el-input__icon" slot="suffix" @click.prevent="botClck(3)">
                                    </i>
                                </el-input>
                            </div>
                            <ul class="cnt">
                                <% questionsList.forEach((item)=> { %>
                                    <li  @click="goDetail(`question/detail/<%= item.id %>`)">
                                        <span class="bgCommon" :style="{ backgroundImage: 'url(' + questionImg + ')' }"></span>
                                        <p><%- item.question %></p>
                                    </li>
                                <% }); %>
                            </ul>
                            <div class="more">
                                <span>
                                    <a href="<%= process.env.VUE_APP_TSA %>/question" @click.prevent="botClck(2)">
                                        查看更多 <i class="el-icon-right"></i>
                                    </a>
                                </span>
                            </div>
                        </div>
                    </div>
                </el-col>
            </el-row>
        </div>
        <div class="aigcApply bgCommon" :style="{ backgroundImage: 'url(' + aigcApplyPng + ')' }">
            <div class="title">让可信时间戳为AIGC作证</div>
            <div class="btn" @click="dockModal=true">申请接入</div>
        </div>
        <%- include('./components/Docking') %>
        <div>
            <%- include('./components/footer'); %>
        </div>
    </div>
</body>
<script src="https://g.alicdn.com/AWSC/AWSC/awsc.js"></script>
<script src="https://cdn.bootcdn.net/ajax/libs/vue/2.6.10/vue.min.js"></script>
<script src="https://unpkg.com/element-ui/lib/index.js"></script>
<script src="https://cdn.bootcss.com/qs/6.7.0/qs.min.js"></script>
<script src="http://code.jquery.com/jquery-2.1.1.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
<script src="/js/aigc.js"></script>
<script>
    $(function(){
        $("[href = '<%= currentRoute %>']").parents('.nav-item').addClass('initActived');
        $("[href = '<%= currentRoute %>']").parents('.nav-item').siblings('.nav-item').removeClass('initActived');
    })
    var interval=null;
    var timer=null;
    var ntpDate = null,nowDate = null,td = null;
    new Vue({
        el: '#wrap',
        data() {
            const reg = /^[1][3,4,5,6,7,8,9][0-9]{9}$/;
            let validatePass = (rule, value, callback) => {
                if (value === "") {
                    callback(new Error("请输入手机号"));
                } else {
                    if (!reg.test(value)) {
                        callback(new Error("请输入正确手机号"));
                    } else {
                        callback();
                    }
                }
            };
            let verifyPass = (rule, value, callback) => {
                if (!this.verify) {
                    callback(new Error("请滑块验证"));
                } else {
                    callback();
                }
            };
            return {
                // header
                time:'',
                utc:'',
                show:false,
                drawShow:true,
                rightArrow: '/images/header/jiantou.png',
                unRead:false,
                unReadList:[],
                userMenu: [
                    {
                        name: "个人中心",
                        link: '<%= process.env.VUE_APP_ACCOUNTUI %>',
                        target: "_blank",
                    },
                    {
                        name: '我要充值',
                        link: '<%= process.env.VUE_APP_ACCOUNTUI %>/userAccount/buy?clientId=952310',
                        target: '_blank'
                    },
                    {
                        name: '消息中心',
                        link: '<%= process.env.VUE_APP_ACCOUNTUI %>messageCenter/history?clientId=700012',
                        target: '_blank',
                        isMsg:true,
                    },
                    {
                        name: "退出登录",
                        link:"/api/logout",
                        target: "_self",
                    },
                ],
                //home
                newKeywords: '',
                questionsList: [],
                courtRank: [],
                newList: [],
                bannerImg: '/images/home/banner.png',
                addressInfo: [
                    {
                        img: "/images/home/address1.png",
                        title: "司法认可",
                        info: "使用可信时间戳生效判决80000件",
                    },
                    {
                        img: "/images/home/address2.png",
                        title: "世界知识产权组织、国家版权局 版权金奖",
                        info: "荣获2018年“中国版权金奖”保护奖",
                    },
                    {
                        img: "/images/home/address3.png",
                        title: "安全保密",
                        info: "公安等保三级，脱敏认证不上传原文",
                    },
                ],
                accountNum: {},
                earthPng: '/images/home/earth.png',
                introduceInfo: {
                    img: '/images/home/introduce.png',
                },
                precedentInfo: {
                    img: '/images/home/precedent.png',
                    textPng1: '/images/home/precedentText1.png',
                    textPng2: '/images/home/precedentText2.png'                
                },
                aigcApplyPng: '/images/home/aigcApplyPng.png',
                userInfo: {},
                questionImg: '/images/home/question.png',
                // dicking
                dockModal: false,
                visibleOne:false,
                visibleSec:false,
                visibleThird:false,
                btnList: [
                    {name: "知识产权", applyId: 998081},
                    {name: "邮件认证", applyId: 998049},
                    {name: "电子合同", applyId: 998113},
                    {name: "项目招标", applyId: 998145},
                    {name: "区块链平台", applyId: 998177},
                    {name: "其他", applyId: 998209}
                ],
                form:{
                    style:''
                },
                form2: {
                    enterpriseName:"",
                    phone: "",
                    verify2: "",
                    captchaCode: "",
                    description: "",
                    name: ""
                },
                rules: {
                    style: [
                        {
                            required: true,
                            message: "请选择身份",
                            trigger: "change"
                        }
                    ],
                    enterpriseName: [
                        {
                            required: true,
                            message: "请输入企业名称",
                            trigger: "blur"
                        }
                    ],
                    name: [
                        {
                            required: true,
                            message: "请输入联系人姓名",
                            trigger: "blur"
                        }
                    ],
                    phone: [
                        {
                            required: true,
                            trigger: "blur",
                            validator: validatePass
                        }
                    ],
                    description: [
                        {
                            required: true,
                            message: "请输入需求描述",
                            trigger: "blur"
                        }
                    ],
                    captchaCode: [
                        {
                            required: true,
                            message: "请输入验证码",
                            trigger: "change"
                        }
                    ],
                    verify2: [
                        {
                            required: true,
                            trigger: "change",
                            validator: verifyPass
                        }
                    ]
                },
                checkIndex: "",
                applyId: "998081",
                yzmtext: "获取验证码",
                verify:false,
                currentTime: 60,
                disabled: false,
                fontNum:0,
                btnLoading:false,
                windowNc: {},
                verify: false,
                nvc:'',
            }
        },
        computed: {},
        watch: {
            dockModal(val){
                this.visibleSec=val;
            },
        },
        created() {
            this.getMsg();
        },
        mounted() {
            //让dialog的body部分不进行懒渲染，默认是懒渲染
            this.$refs.slideDia.rendered=true;
            this.set_ALY_config();
            this.initTime();
        },
        methods: {
            // header
            initTime(){
                axios({
                    method: "get",
                    url:'<%= process.env.VUE_APP_TSA %>/api/time/getCurrentTime',
                }).then((res) => {
                    ntpDate = res.data;
                    nowDate = new Date().getTime();
                    td = ntpDate - nowDate;
                    nowDate = nowDate + td;
                }).catch((err) => {
                    console.log(err);
                })
                this.timer = setInterval(() => this.getDate(), 1);
            },
            clientTimeZone() {
                let munites = new Date().getTimezoneOffset();
                let hour = parseInt(munites / 60);
                let munite = munites % 60;
                let prefix = "-";
                if (hour < 0 || munite < 0) {
                    prefix = "+";
                    hour = -hour;
                    if (munite < 0) {
                        munite = -munite;
                    }
                }
                hour = hour + "";
                munite = munite + "";
                if (hour.length == 1) {
                    hour = "0" + hour;
                }
                if (munite.length == 1) {
                    munite = "0" + munite;
                }
                return prefix + hour + ":" + munite;
            },
            getDate(){
                if (ntpDate == null) {
                    return;
                } else {
                    let now = new Date().getTime() + td;
                    if (Math.abs(parseInt(now) - parseInt(nowDate)) > 1000) {
                        ntpDate = null;
                        this.initTime();
                    } else {
                        nowDate = now;
                        this.time=moment(now).format('YYYY-MM-DD HH:mm:ss:SSS');
                        this.utc=this.clientTimeZone();
                    }
                }
            },
            
            // Home
            goDetail(data) {
                window.open('<%= process.env.VUE_APP_TSA %>/' + data)
            },
            botClck(type) {
                if (type === 1) {
                    this.openHref(
                        '<%= process.env.VUE_APP_TSA %>/news'
                    )
                } else if (type === 2) {
                    this.openHref(
                        '<%= process.env.VUE_APP_TSA %>/question'
                    )
                } else if (type === 3) {
                    this.openHref(
                        `<%= process.env.VUE_APP_TSA %>/question?keywords=${this.newKeywords}`
                    )
                }
            },
            async getMsg(){
                axios({
                    method: "get",
                    url: "/api/messenger/unreadCount",
                }).then(res => {
                    this.unReadList=res.data.sourceTypeUnreadList;
                    res.data.totalUnreadCount>0 ? this.unRead=true : this.unRead=false;
                }).catch(err => {
                    console.log(err)
                })
            },
            goMsg(){
                if (this.unRead) {
                    try {
                        this.unReadList.forEach((item)=>{
                            if(item.unreadCount>0){
                                let url=`<%= process.env.VUE_APP_ACCOUNTUI %>/messageCenter/history?clientId=700012&sysRosterId=${item.sysRosterId}`
                                this.openHref(url)
                                throw new Error("终止循环");
                            }
                        })
                    }catch (e) {
                        console.log(e)
                    }
                }else{
                    window.open(`<%= process.env.VUE_APP_ACCOUNTUI %>/messageCenter/history?clientId=700012`)
                }
            },
            openHref(url){
                let link = document.createElement("a");
                link.style.display = "none";
                link.target = "_blank";
                link.href = url;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            },
            getRouterQuery(){
                let url = location.search;   //获取url中"?"符后的字串   
                let theQueryObj = new Object();
                if (url.indexOf("?") != -1) 
                {
                    let str = url.substr(1);
                    strs = str.split("&");
                    for (let i = 0; i < strs.length; i++) 
                    {
                        theQueryObj[strs[i].split("=")[0]] = unescape(strs[i].split("=")[1]);
                    }
                }
                return theQueryObj;
            },
            
            onLogin () {
                let params = Object.assign({clientId:700028},this.getRouterQuery(), {
                    redirectUrl: encodeURI(window.location.href),
                });
                window.location.href = "/api/login?" + Qs.stringify(params);
            },
            // doking
            fontNumber(e) {
                this.fontNum = e.length;
            },
            applyDialogOk() {
                if (this.applyId === "") {
                    this.$message.warning("请选择申请目的！");
                    return false;
                } else {
                    this.visibleOne = false;
                    this.visibleSec = true;
                }
            },
            changeListBtn(item, index) {
                this.checkIndex = index;
                this.applyId = item.applyId;
            },
            prevOne(){
                this.visibleSec = false;
                this.visibleOne = true;
            },
            applyDialogOkSec(e) {
                e.preventDefault();
                let that = this;
                this.$refs.form.validate(valid => {
                    if (valid) {
                        that.visibleThird = true;
                        that.visibleSec = false;
                    } else {
                        console.log("error submit!!");
                        return false;
                    }
                });
            },
            applyDialogOkThird(e) {
                e.preventDefault();
                let that = this;
                this.$refs.form2.validate(async valid => {
                    if (valid) {
                        that.btnLoading = true;
                        let {phone, enterpriseName, name, captchaCode, description} = that.form2;
                        let {style} = that.form;
                        let obj={
                            phone,
                            applyId: that.applyId,
                            enterpriseName,
                            name,
                            style,
                            captchaCode,
                            description,
                            from: 0,
                        }
                        axios({
                            Headers: {
                                "content-type": "application/json;charset=UTF-8"
                            },
                            method: "post",
                            url: "<%= process.env.VUE_APP_TSA %>/api/sendTools",
                            data:obj
                        }).then(res => {
                            if (res.data.code === 200) {
                                that.form2 = {
                                    name: "",
                                    phone: "",
                                    enterpriseName: "",
                                    verify2: "",
                                    captchaCode: "",
                                    description: '',
                                };
                                that.$message.success("申请成功！");
                                that.$refs["form"].resetFields();
                                that.$refs["form2"].resetFields();
                                that.resetNvc();
                                that.resetForm();
                                that.dockModal=false;
                            } else {
                                that.$message.warning(res.data.message);
                            }
                        }).catch(err=>{
                            that.$message.warning(err.data.message);
                        })
                        that.btnLoading = false;
                    } else {
                        console.log("error submit!!");
                        return false;
                    }
                });
            },
            backSec() {
                this.visibleThird = false;
                this.visibleSec = true;
                this.resetNvc();
                clearInterval(interval);
                this.$refs["form2"].resetFields();
            },
            async verification(data) {
                let that = this;
                if (data) {
                    this.verify=data.verify;
                    this.$refs["form2"].clearValidate(["verify2"]);
                    let { phone } = that.form2;
                    if (!phone) {
                        that.$message.warning("手机号不能为空");
                        that.verify=false;
                        that.resetNvc();
                        return false;
                    }
                    let reg = /^1[3456789]\d{9}$/;
                    if (!reg.test(phone)) {
                        that.$message.warning("手机号格式不正确");
                        that.verify=false;
                        that.resetNvc();
                        return false;
                    }
                    that.getCode();

                    axios({
                        headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'},
                        method: "post",
                        url: "<%= process.env.VUE_APP_TSA %>/api/captcha/sendSmsCode",
                        data:Qs.stringify({
                            nvc: data.nvc,
                            phone: that.form2.phone
                        })
                    }).then(res => {
                        if (res.data.code === 200) {
                            that.$message.success(res.data.message);
                            that.verify = true;
                            that.form2.verify2 = "213";
                            that.$refs["form2"].clearValidate(["verify2"]);
                        } else {
                            that.$message.warning(res.data.message);
                            that.resetNvc();
                            clearInterval(interval);
                            that.yzmtext = "获取验证码";
                            that.disabled = false;
                            that.verify = false;
                        }
                    }).catch(err=>{
                        this.$message.warning(err.data.message);
                    })
                }
            },
            getVer() {
                let {phone} = this.form2;
                let that = this;
                if (!phone) {
                    that.$message.warning("手机号不能为空");
                    return false;
                }
                let reg = /^1[3456789]\d{9}$/;
                if (!reg.test(phone)) {
                    that.$message.warning("手机号格式不正确");
                    return false;
                }
                if (!this.verify) {
                    that.$message.warning("请先进行滑块验证");
                    return false;
                }
                this.$refs.Verification.alicode();
            },
            getCode() {
                var that = this;
                var currentTime = that.currentTime;
                that.disabled = true;
                interval = setInterval(function() {
                    currentTime--;
                    that.yzmtext = "(" + currentTime + "s)重新获取";
                    if (currentTime <= 0) {
                    clearInterval(interval);
                    that.currentTime = 60;
                    that.yzmtext = "获取验证码";
                    that.disabled = false;
                    }
                }, 1000);
            },
            closeOne(done){
                this.resetForm();
                this.dockModal=false;
                done&&done();
            },
            closeSec(done){
                this.$refs["form"].resetFields();
                this.resetForm();
                this.dockModal=false;
                done&&done();
            },
            closeThird(done){
                this.$refs["form"].resetFields();
                this.$refs["form2"].resetFields();
                this.resetForm();
                this.dockModal=false;
                done&&done();
            },
            //置空钉钉推送相关字段
            resetForm(){
                this.form.style='';
                this.monitorOne=false;
                this.visibleOne = false;
                this.visibleSec = false;
                this.visibleThird = false;
                this.disabled = false;
                this.yzmtext = "获取验证码";
                this.currentTime=60;
                this.verify = false;
                this.checkIndex = "";
                this.applyId = "998081";
                clearInterval(interval);
                this.form2.enterpriseName = "";
                this.form2.captchaCode = "";
            },
            set_ALY_config() {
                let that = this;
                let myLang = {
                    cn: {
                        //等待滑动状态提示。
                        //'SLIDE': "请向右滑动验证",
                        //验证失败触发拦截状态提示。
                        FAIL: "验证失败，请手动刷新页面重试",
                    },
                };
                let ncOption = {
                    // 应用类型标识。它和使用场景标识（scene字段）一起决定了无痕验证的业务场景与后端对应使用的策略模型。您可以在人机验证控制台的配置管理页签找到对应的appkey字段值，请务必正确填写。
                    appkey: "FFFF0N000000000099FD",
                    //使用场景标识。它和应用类型标识（appkey字段）一起决定了无痕验证的业务场景与后端对应使用的策略模型。您可以在人机验证控制台的配置管理页签找到对应的scene值，请务必正确填写。
                    scene: "nc_login",
                    renderTo: 'captcha',
                    upLang: myLang,
                    customWidth: 373,

                    // 二次验证获取人机信息串，跟随业务请求一起上传至业务服务器，由业务服务器进行验签。
                    success: function (data) {
                        // window.console && console.log(data);
                        that.nvc=data.sessionId +"|" +data.sig +"|" +data.token +"|nc_login";
                        that.verify = true;
                        // that.alicode({ verify: that.verify });
                        that.verification({ verify: that.verify,nvc: that.nvc})
                    },
                    // 前端二次验证失败时触发该回调参数
                    fail: function (failCode) {
                        window.console && console.log(failCode);
                        that.verify = false;
                    },
                    // 前端二次验证加载异常时触发该回调参数。
                    error: function (errorCode) {
                        window.console && console.log(errorCode);
                        that.verify = false;
                    },
                };

                // 实例化nvc 对无痕验证进行初始化操作
                AWSC.use("nc", function (state, module) {
                    that.module = module;
                    // 初始化 调用module.init进行初始化
                    window.nc = module.init(ncOption);
                });
            },
            resetNvc() {
                window.nc.reset();
                this.verify = false;
            },
        },
    })
            
</script>
</html>